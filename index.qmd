---
title: "ESS330 Yellowstone Project"
authors:
  - name: Sammy Tetrault
    affiliation: CSU
    roles: coding
    corresponding: true
  - name: Zoe Gagalis
    affiliation: CSU
    roles: coding
    corresponding: true
  - name: Zoe Ellis
    affiliation: CSU
    roles: coding
    corresponding: true
date: "2025-04-10"
format: html
execute:
  echo: true
bibliography: references.bib
csl: styles/apa.csl
---
## Introduction
  Wolf reintroduction after their nearly 70-year absence in Yellowstone National Park has been one of the most highly monitored, discussed, and debated wildlife restoration efforts in recent decades. Following the reintroduction of the wolves (Canis lupus) to this part of Wyoming as a wildlife conservation effort, there have been noticeable changes to surrounding ecosystems, including other mammal populations such as bison and elk, as well as plant populations such as willows and other riparian vegetation within the national park [@ripple2012]. With how extensive this research is presented, as well as how long the study has gone on for, our goal is to zoom in on aspects regarding the predator/prey relationship and its overall effect on Yellowstone. 
  Our project, which will have a primary focus on species population dynamics and trends, will aim to understand and explain these impacts and how trophic cascades can have an enormous and lasting impact on ecosystems. Importantly, these effects are not always straightforwardly positive or negative. While wolf reintroduction has supported the regrowth of riparian habitats and enhanced biodiversity in some areas, it has also shifted the dynamics of competition among prey species and changed the structure of Yellowstoneâ€™s food webs. By exploring how these interactions evolve over time, we aim to highlight the multifaceted and interconnected nature of ecosystem responses to change.
  The project and analysis will focus on how these trophic interactions can change, help, and hinder surrounding habitats, ecosystems, and food webs. We suspect that the analysis of the data we have gathered on wolf reintroduction in the park regarding species population counts will reveal dramatic changes in the populations of both elk and bison, and will illustrate how bringing wolves back to this area creates cascading impacts on the entire ecosystem, by demonstrating how wolves impact two species who have existed in Yellowstone without any natural predators for many years. It is likely that elk will show a steep decreasing trend after wolf reintroduction, as their population was largely uncontrolled for several decades and allowed to explode to high numbers [@metz2016]. Bison, which are naturally less vulnerable to predators, will likely respond differently in regards to population numbers, as the decreasing number of elk allows the bison to live in an area where there is now less competition for resources with other species [@smith2000]. Through our data analysis, we aim to show the indirect effects of this major change, and we hope to be able to create an easily palatable and understandable reference for people like us, who are otherwise removed from these issues. By making this information more digestible, we hope for our audience to gain a broader understanding of this issue and why it is important to understand trophic dynamics within the ecosystems that we know and love. Additionally, since Colorado has been experimenting with wolf reintroduction since 2023, an action that has been met with widespread controversy and criticism, we hope that our analysis of these impacts will help Coloradans better understand the impacts of bringing the wolf population back to its native habitat. While this conservation initiative has been controversial for many residents in surrounding areas, we hope to help provide a better understanding of why it was done, its impacts, and the importance of efforts like this one.


## Data Exploration
#### Data Description
The data that we are looking at comes from a study conducted by David Cooper and Tom Hobbs of Colorado State University. Their study investigated Salix height as a response to browsing and the water table [@cooper].For our study, we are interested in the relationship between wolf population count and grazer population counts (elk and bison). The first dataset that we are using is a bison data csv which includes date, population count, adult count, and calf count. The second dataset is a wolf data csv which includes site, year, and population count. The third dataset is an elk data csv which includes year, mean population count, and upper and lower confidence intervals. 

#### Opening the data
```{r}
library(readr)

library(here)

bison_data <- read_csv(here("data", "BisonData2000_2023.csv"))

elk_data <- read_csv(here("data", "corrected_elk_counts_09Jul2023_Park_only.csv"))

wolf_data <- read_csv(here("data", "wolf_1995_2022_population_ynp_nr_nnrr.csv"))

```

#### Cleaning the data
```{r}
library(dplyr)
library(flextable)
library(tidyr)

#reformat the wolf dataset to have a year column rather than each year as its own column
wolf_data <- wolf_data %>%
  pivot_longer(cols = -Site,
               names_to = "year",
               values_to = "wolf_count")

#only keep "Yellowstone National Park" site data
wolf_data <- wolf_data %>%
  filter(Site == "Yellowstone National Park") %>%
  mutate(year = as.integer(year)) %>%
  select(year, wolf_count)

#filtering elk data for just year and count columns
elk_data <- elk_data %>%
  select(year, mean)

#filtering bison data for just year and count columns
bison_data <- bison_data %>%
  select(year, total)

#rename columns to count
elk_data <- elk_data %>%
  rename(elk_count = mean)

bison_data <- bison_data %>%
  rename(bison_count = total)

#joining the different tables
data <- full_join(wolf_data, elk_data, by = "year") %>%
  full_join(bison_data, by = "year")

#removing NAs, had to google how to remove commas from bison_count to convert to int
data <- drop_na(data) %>%
  mutate(bison_count = as.integer(gsub(",", "", bison_count)))
```

#### Visualizing the data
```{r}
library(ggplot2)

wolf_pop_plot = ggplot(data = data, aes(x = year, y = wolf_count)) +
  geom_smooth(color = "#1034A6") +
  labs(title = "Yellowstone Wolf Population 2000-2021",
       x = "year",
       y = "wolf count") +
  theme_light() +
# making axes nicely visible
  theme(axis.title.x = element_text(size = 12),
        axis.title.y = element_text(size = 12),
        axis.text.x = element_text(size = 10, color = "black"),
        axis.text.y = element_text(size = 10, color = "black"),
        axis.line = element_line(color = "black", size = 0.5))

print(wolf_pop_plot)

elk_pop_plot <- ggplot(data = data, aes(x = year, y = elk_count)) +
  geom_smooth(color = "#613613") +
  labs(title = "Yellowstone Elk Population 2000-2021",
       x = "year",
       y = "elk count") +
  theme_light()+
# making axes nicely visible
  theme(axis.title.x = element_text(size = 12),
        axis.title.y = element_text(size = 12),
        axis.text.x = element_text(size = 10, color = "black"),
        axis.text.y = element_text(size = 10, color = "black"),
        axis.line = element_line(color = "black", size = 0.5))

print(elk_pop_plot)

bison_pop_plot <- ggplot(data = data, aes(x = year, y = bison_count)) +
  geom_smooth(color = "#004100") +
  labs(title = "Yellowstone Bison Population 2000-2021",
       x = "year",
       y = "bison count") +
  theme_light() +
# making axes nicely visible
  theme(axis.title.x = element_text(size = 12),
        axis.title.y = element_text(size = 12),
        axis.text.x = element_text(size = 10, color = "black"),
        axis.text.y = element_text(size = 10, color = "black"),
        axis.line = element_line(color = "black", size = 0.5)) 

print(bison_pop_plot)
```

#### Testing the data

First we tested the wolf count data for normality using the Shapiro-Wilk test. This test had a p-value of 5.507e-06, indicating that we should reject the null. The null of this test is that the data is normal, thus this indicates that the wolf population data is not normal.
```{r}
shapiro.test(data$wolf_count)
```
Next, we tested the elk count data using the same test. Again, the p-value was highly significant(2.789e-07). This indicates that the elk population data is also not normal.
```{r}
shapiro.test(data$elk_count)
```
Lastly, we tested the bison count data using the same test. Once again, the p-value was highly significant(0.0005066). This suggests that the bison population data is also not normal. 

```{r}
shapiro.test(data$bison_count)
```
The next test we ran was a QQ test. We generated QQ plots for each population count and from looking at the plots found that while the populations do tend to follow the normal distribution line, there are deviations for all three groups, suggesting non-normality. 
```{r}
# wolf qqplot
library(ggpubr)
wolf_gg = ggqqplot(data$wolf_count) +
  labs(title = "Wolf QQ Plot")

#elk qqplot
library(ggpubr)
elk_gg = ggqqplot(data$elk_count) +
  labs(title = "Elk QQ Plot")

#bison qqplot
library(ggpubr)
bison_gg = ggqqplot(data$bison_count) +
  labs(title = "Bison QQ Plot")

ggarrange(wolf_gg, elk_gg, bison_gg)
```
#### Creating Models
```{r}
library(modeltime)
library(tidymodels)
library(timetk)
library(purrr)
library(dataRetrieval)
library(lubridate)

str(data)

data <- data %>%
  group_by(year) %>%
  summarize(wolf_count = mean(wolf_count), bison_count = mean(bison_count), elk_count = mean(elk_count)) %>%
  ungroup()

data <- data %>%
  mutate(year = ymd(paste0(year, "0101")))

str(data)

splits <- time_series_split(data, assess = "15 years", cumulative = TRUE) ##using approximately 70% of the data for training and 30% for testing

training <- training(splits)
testing <- testing(splits)

  
models <- list(
  #wolf count to predict bison population
  "Wolf Predict Bison" =
  arima_reg() %>%
  set_engine("auto_arima") %>%
  fit(bison_count ~ wolf_count + year, data = data),

  #wolf count to predict elk population
  "Wolf Predict Elk" =
  arima_reg() %>%
  set_engine("auto_arima") %>%
  fit(elk_count ~ wolf_count + year, data = data),

  #elk count to predict bison population
  "Elk Predict Bison" = 
  arima_reg() %>%
  set_engine("auto_arima") %>%
  fit(bison_count ~ elk_count + year, data = data),

  #bison count to predict elk population
  "Bison Predict Elk" =
  arima_reg() %>%
  set_engine("auto_arima") %>%
  fit(elk_count ~ bison_count + year, data = data)
)

models_tbl <- as_modeltime_table(models) %>%
  mutate(.model_id = c("Wolf Predict Bison", "Wolf Predict Elk", "Elk Predict Bison", "Bison Predict Elk"))

calibration_table <- modeltime_calibrate(models_tbl, testing, quiet = FALSE)

modeltime_accuracy(calibration_table)

forecast <- calibration_table %>%
  modeltime_forecast(new_data = testing, actual_data = data)
```

#### Creating Actual Vs. Predicted Models
```{r}
forecast <- forecast %>%
  filter(.model_desc != "ACTUAL") %>%
  rename(year = .index)%>%
  select(.model_id, year, .value)

merged_vals <- merge(forecast, data, by = "year")

wolf_predict_bison <- merged_vals %>%
  filter(.model_id == "Wolf Predict Bison")

wolf_predict_elk <- merged_vals %>%
  filter(.model_id == "Wolf Predict Elk")

elk_predict_bison <- merged_vals %>%
  filter(.model_id == "Elk Predict Bison")

bison_predict_elk <- merged_vals %>%
  filter(.model_id == "Bison Predict Elk")

lm_wolf_bison <- lm(bison_count ~ .value, data = wolf_predict_bison)

summary(lm_wolf_bison)

lm_wolf_elk <- lm(elk_count ~ .value, data = wolf_predict_elk)

summary(lm_wolf_elk)

lm_elk_bison <- lm(bison_count ~ .value, data = elk_predict_bison)

summary(lm_elk_bison)

lm_bison_elk <- lm(elk_count ~ .value, data = bison_predict_elk)

summary(lm_bison_elk)
```

#### Plotting Actual Vs. Predicted
```{r}
library(ggplot2)

lm_wolf_bison <- ggplot(wolf_predict_bison, aes(x = .value, y = bison_count)) +
  geom_point() +
  geom_abline(slope = 1, intercept = 0, color = "#613613")+
  labs(x = "Predicted", y = "Observed",
       title = "Using Wolf Count to Predict Bison Count")

print(lm_wolf_bison)
```

```{r}
library(ggplot2)

lm_wolf_elk <- ggplot(wolf_predict_elk, aes(x = .value, y = elk_count)) +
  geom_point() +
  geom_abline(slope = 1, intercept = 0, color = "#228B22")+
  labs(x = "Predicted", y = "Observed",
       title = "Using Wolf Count to Predict Elk Count")

print(lm_wolf_elk)
```

```{r}
library(ggplot2)

lm_elk_bison <- ggplot(elk_predict_bison, aes(x = .value, y = bison_count)) +
  geom_point() +
  geom_abline(slope = 1, intercept = 0, color = "#01796F")+
  labs(x = "Predicted", y = "Observed",
       title = "Using Elk Count to Predict Bison Count")

print(lm_elk_bison)
```
```{r}
library(ggplot2)

lm_bison_elk <- ggplot(bison_predict_elk, aes(x = .value, y = elk_count)) +
  geom_point() +
  geom_abline(slope = 1, intercept = 0, color = "#006400") +
  labs(x = "Predicted", y = "Observed",
       title = "Using Bison Count to Predict Elk Count")

print(lm_bison_elk)
```
#### GLM Models

##### Wolf vs. Bison
```{r}
library(ggplot2)
library(dplyr)
library(performance)

data <- data %>%
  mutate(wolf_count = as.integer(wolf_count)) %>%
  mutate(bison_count = as.integer(bison_count)) %>%
  mutate(elk_count = as.integer(elk_count))

wolf_bison_glm <- glm(bison_count ~ wolf_count, family = poisson, data = data)

summary(wolf_bison_glm)

wolf_bison_gg = ggplot(data, aes(x = wolf_count, y = bison_count)) +
  geom_smooth(method = "glm", method.args = list(family = poisson), se = TRUE, alpha = 0.25) + 
  labs(x = "Wolf Count", y = "Bison Count", title = "Wolf Population vs Bison Population")

#calculate McFadden's R-squared for model
with(summary(wolf_bison_glm), 1 - deviance/null.deviance)

print(wolf_bison_gg)
```
##### Wolf vs. Elk
```{r}
wolf_elk_glm <- glm(elk_count ~ wolf_count, family = poisson, data = data)

summary(wolf_elk_glm)

wolf_elk_gg = ggplot(data, aes(x = wolf_count, y = elk_count)) +
  geom_smooth(method = "glm", method.args = list(family = poisson), se = TRUE, alpha = 0.25) + 
  labs(x = "Wolf Count", y = "Elk Count", title = "Wolf Population vs Elk Population")

#calculate McFadden's R-squared for model
with(summary(wolf_elk_glm), 1 - deviance/null.deviance)

print(wolf_elk_gg)
```

##### Elk vs. Bison
```{r}
elk_bison_glm <- glm(bison_count ~ elk_count, family = poisson, data = data)

summary(elk_bison_glm)

elk_bison_gg = ggplot(data, aes(x = elk_count, y = bison_count)) +
  geom_smooth(method = "glm", method.args = list(family = poisson), se = TRUE, alpha = 0.25) + 
  labs(x = "Elk Count", y = "Bison Count", title = "Elk Population vs Bison Population")

#calculate McFadden's R-squared for model
with(summary(elk_bison_glm), 1 - deviance/null.deviance)

print(elk_bison_gg)
```

##### Bison vs. Elk
```{r}
bison_elk_glm <- glm(elk_count ~ bison_count, family = poisson, data = data)

summary(bison_elk_glm)

bison_elk_gg = ggplot(data, aes(x = bison_count, y = elk_count)) +
  geom_smooth(method = "glm", method.args = list(family = poisson), se = TRUE, alpha = 0.25) + 
  labs(x = "Bison Count", y = "Elk Count", title = "Bison Population vs Elk Population")

#calculate McFadden's R-squared for model
with(summary(bison_elk_glm), 1 - deviance/null.deviance)

print(bison_elk_gg)
```


## Preliminary Methods
  To analyze this data, we will be doing data exploration using methods such as ANOVA, t-testing, and generating finalized plots.  We will be comparing the raw files of annual elk populations and bison populations from 1970 to 2015, which will provide a strong background comparison for time frames both before and after wolf reintroduction, to help us better understand how the ecosystem was established fully before, during, and after this major change. This time frame will provide a sufficient comparison of the effects wolves had when they were introduced. We will begin our analysis with exploratory data techniques, including basic descriptive statistics and visualizations to observe general trends and outliers. From there, we will employ statistical methods such as ANOVA and t-tests to determine whether the changes in population means before and after wolf reintroduction are statistically significant. These methods will help us assess the differences in trends between elk and bison, two species with contrasting responses to wolf predation. Additionally, we will generate visual representationsâ€”such as line graphs and bar plotsâ€”to display population fluctuations over time. These visualizations will not only help us interpret the data more clearly but will also serve as an effective communication tool for presenting our findings to non-expert audiences. We expect these plots to highlight a decline in elk populations following 1995 and a relatively stable or increasing trend in bison numbers, supporting our hypothesis regarding species-specific predator responses. Given the extensive data there wonâ€™t be a need for supplemental material, but this could also pose a challenge when handling such large files.  Our selected methods will allow us to compare 2 different prey populations over the same period of time.  We hope to see a visual representation of how the introduction  affected these populations, and how it also compares to their growth before. By comparing the population trajectories of elk and bison over the same time period and in the same ecological context, we hope to develop a clearer understanding of how apex predators like wolves influence ecosystem structureâ€”not just through direct predation, but through broader cascading effects.